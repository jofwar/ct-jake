{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "AWS CloudFormation template to deploy the base security groups",
  "Parameters": {
    "VpcId": {
      "Type": "String",
      "Description": "VpcId of your existing Virtual Private Cloud (VPC)"
    },
    "VPCOctet": {
      "Description": "First two octets of the VPC",
      "Type": "String",
      "MinLength": "4",
      "MaxLength": "7",
      "AllowedPattern": "[0-9]{2,3}.[0-9]{1,3}",
      "ConstraintDescription": "must only be the first two octets without a trailing period"
    },
    "Name": {
      "Description": "Name of the Network",
      "Type": "String",
      "MinLength": "3",
      "MaxLength": "255"
    },
    "Customer": {
      "Description": "Name of the customer",
      "Type": "String"
    },
    "Environment": {
      "Description": "Environment to allocate costs to",
      "Type": "String",
      "MinLength": "3",
      "MaxLength": "255"
    },
    "RemoteAdministration": {
      "Description": "CIDR to allow remote access to instances",
      "Type": "String",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid CIDR range of the form x.x.x.x/x."
    }
  },
  "Mappings": {
    "SubnetConfig": {
      "VPC": {
        "CIDR": "0.0/16"
      },
      "WebA": {
        "CIDR": "2.0/24"
      },
      "WebB": {
        "CIDR": "3.0/24"
      },
      "SecurityA": {
        "CIDR": "254.0/25"
      },
      "SecurityB": {
        "CIDR": "254.128/25"
      },
      "DataA": {
        "CIDR": "6.0/24"
      },
      "DataB": {
        "CIDR": "7.0/24"
      }
    },
    "AvailabilityZones": {
      "ap-southeast-2": {
        "ZoneA": "ap-southeast-2a",
        "ZoneB": "ap-southeast-2b"
      },
      "eu-west-1": {
        "ZoneA": "eu-west-1a",
        "ZoneB": "eu-west-1b"
      }
    }
  },
  "Resources": {
    "sgAdmin": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Admin Security Group",
        "VpcId": {
          "Ref": "VpcId"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Admin-Security-Group"
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          },
          {
            "Key": "Customer",
            "Value": {
              "Ref": "Customer"
            }
          }
        ]
      }
    },
    "sgTrendELB": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Trend ELB Security Group",
        "VpcId": {
          "Ref": "VpcId"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Trend-ELB-Security-Group"
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          },
          {
            "Key": "Customer",
            "Value": {
              "Ref": "Customer"
            }
          }
        ]
      }
    },
    "sgTrendManager": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Trend Manager Security Group",
        "VpcId": {
          "Ref": "VpcId"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Trend-Manager-Security-Group"
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          },
          {
            "Key": "Customer",
            "Value": {
              "Ref": "Customer"
            }
          }
        ]
      }
    },
    "sgTrendAgent": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Trend Agent Security Group",
        "VpcId": {
          "Ref": "VpcId"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Trend-Agent-Security-Group"
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          },
          {
            "Key": "Customer",
            "Value": {
              "Ref": "Customer"
            }
          }
        ]
      }
    },
    "sgData": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Data Security Group",
        "VpcId": {
          "Ref": "VpcId"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Data-Security-Group"
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          },
          {
            "Key": "Customer",
            "Value": {
              "Ref": "Customer"
            }
          }
        ]
      }
    },
    "sgAdminIngresssgRDP": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "DependsOn": "sgAdmin",
      "Properties": {
        "GroupId": {
          "Ref": "sgAdmin"
        },
        "IpProtocol": "tcp",
        "FromPort": "3389",
        "ToPort": "3389",
        "CidrIp": "58.108.241.208/32"
      }
    },
    "sgAdminEgresssgDataRDP": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "DependsOn": "sgAdmin",
      "Properties": {
        "GroupId": {
          "Ref": "sgAdmin"
        },
        "IpProtocol": "tcp",
        "FromPort": "3389",
        "ToPort": "3389",
        "DestinationSecurityGroupId": {
          "Ref": "sgData"
        }
      }
    },
    "sgAdminEgresssgTrendRDP": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "DependsOn": "sgAdmin",
      "Properties": {
        "GroupId": {
          "Ref": "sgAdmin"
        },
        "IpProtocol": "tcp",
        "FromPort": "3389",
        "ToPort": "3389",
        "DestinationSecurityGroupId": {
          "Ref": "sgTrendManager"
        }
      }
    },
    "sgAdminEgressSSH": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "DependsOn": "sgAdmin",
      "Properties": {
        "GroupId": {
          "Ref": "sgAdmin"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "DestinationSecurityGroupId": {
          "Ref": "sgAdmin"
        }
      }
    },
    "sgAdminEgressHTTPS": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "DependsOn": "sgAdmin",
      "Properties": {
        "GroupId": {
          "Ref": "sgAdmin"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "DestinationSecurityGroupId": {
          "Ref": "sgAdmin"
        }
      }
    },
    "sgAdminEgressHTTP": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "DependsOn": "sgAdmin",
      "Properties": {
        "GroupId": {
          "Ref": "sgAdmin"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "DestinationSecurityGroupId": {
          "Ref": "sgAdmin"
        }
      }
    },
    "sgTrendELBIngressAllHTTPS": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "DependsOn": "sgTrendELB",
      "Properties": {
        "GroupId": {
          "Ref": "sgTrendELB"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "sgTrendELBEgressTrendManager": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "DependsOn": "sgTrendELB",
      "Properties": {
        "GroupId": {
          "Ref": "sgTrendELB"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "sgTrendManagerIngressTrendELBHTTPS": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "DependsOn": "sgTrendManager",
      "Properties": {
        "GroupId": {
          "Ref": "sgTrendManager"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "SourceSecurityGroupId": {
          "Ref": "sgTrendManager"
        }
      }
    },
    "sgTrendManagerIngressTrendManagment": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "DependsOn": "sgTrendManager",
      "Properties": {
        "GroupId": {
          "Ref": "sgTrendManager"
        },
        "IpProtocol": "tcp",
        "FromPort": "4118",
        "ToPort": "4122",
        "SourceSecurityGroupId": {
          "Ref": "sgTrendManager"
        }
      }
    },
    "sgTrendManagerIngressAdminRDP": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "DependsOn": "sgTrendManager",
      "Properties": {
        "GroupId": {
          "Ref": "sgTrendManager"
        },
        "IpProtocol": "tcp",
        "FromPort": "3389",
        "ToPort": "3389",
        "SourceSecurityGroupId": {
          "Ref": "sgAdmin"
        }
      }
    },
    "sgTrendManagerEgressHTTP": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "DependsOn": "sgTrendManager",
      "Properties": {
        "GroupId": {
          "Ref": "sgTrendManager"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "sgTrendManagerEgressHTTPS": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "DependsOn": "sgTrendManager",
      "Properties": {
        "GroupId": {
          "Ref": "sgTrendManager"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "sgTrendManagerEgressMail": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "DependsOn": "sgTrendManager",
      "Properties": {
        "GroupId": {
          "Ref": "sgTrendManager"
        },
        "IpProtocol": "tcp",
        "FromPort": "587",
        "ToPort": "587",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "sgTrendManagerEgressSQL": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "DependsOn": "sgTrendManager",
      "Properties": {
        "GroupId": {
          "Ref": "sgTrendManager"
        },
        "IpProtocol": "tcp",
        "FromPort": "1433",
        "ToPort": "1433",
        "DestinationSecurityGroupId": {
          "Ref": "sgData"
        }
      }
    },
    "sgTrendAgentIngressTrendManagement": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "DependsOn": "sgTrendAgent",
      "Properties": {
        "GroupId": {
          "Ref": "sgTrendAgent"
        },
        "IpProtocol": "tcp",
        "FromPort": "4118",
        "ToPort": "4122",
        "SourceSecurityGroupId": {
          "Ref": "sgTrendAgent"
        }
      }
    },
    "sgTrendAgentEgressHTTP": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "DependsOn": "sgTrendAgent",
      "Properties": {
        "GroupId": {
          "Ref": "sgTrendAgent"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "DestinationSecurityGroupId": {
          "Ref": "sgTrendAgent"
        }
      }
    },
    "sgTrendAgentEgressHTTPS": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "DependsOn": "sgTrendAgent",
      "Properties": {
        "GroupId": {
          "Ref": "sgTrendAgent"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "DestinationSecurityGroupId": {
          "Ref": "sgTrendAgent"
        }
      }
    },
    "sgTrendAgentEgressTrendAgent": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "DependsOn": "sgTrendAgent",
      "Properties": {
        "GroupId": {
          "Ref": "sgTrendAgent"
        },
        "IpProtocol": "tcp",
        "FromPort": "4118",
        "ToPort": "4122",
        "DestinationSecurityGroupId": {
          "Ref": "sgTrendAgent"
        }
      }
    },
    "sgDataIngressSQL": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "DependsOn": "sgData",
      "Properties": {
        "GroupId": {
          "Ref": "sgData"
        },
        "IpProtocol": "tcp",
        "FromPort": "1433",
        "ToPort": "1433",
        "SourceSecurityGroupId": {
          "Ref": "sgData"
        }
      }
    },
    "sgDataIngressMySQL": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "DependsOn": "sgData",
      "Properties": {
        "GroupId": {
          "Ref": "sgData"
        },
        "IpProtocol": "tcp",
        "FromPort": "3306",
        "ToPort": "3306",
        "SourceSecurityGroupId": {
          "Ref": "sgData"
        }
      }
    },
    "sgDataIngressPostgres": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "DependsOn": "sgData",
      "Properties": {
        "GroupId": {
          "Ref": "sgData"
        },
        "IpProtocol": "tcp",
        "FromPort": "5432",
        "ToPort": "5432",
        "SourceSecurityGroupId": {
          "Ref": "sgData"
        }
      }
    },
    "sgDataIngressRDP": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "DependsOn": "sgData",
      "Properties": {
        "GroupId": {
          "Ref": "sgData"
        },
        "IpProtocol": "tcp",
        "FromPort": "3389",
        "ToPort": "3389",
        "SourceSecurityGroupId": {
          "Ref": "sgAdmin"
        }
      }
    },
    "sgDataIngressSSH": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "DependsOn": "sgData",
      "Properties": {
        "GroupId": {
          "Ref": "sgData"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "SourceSecurityGroupId": {
          "Ref": "sgData"
        }
      }
    },
    "sgDataEgressHTTP": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "DependsOn": "sgData",
      "Properties": {
        "GroupId": {
          "Ref": "sgData"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "DestinationSecurityGroupId": {
          "Ref": "sgData"
        }
      }
    },
    "sgDataEgressHTTPS": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "DependsOn": "sgData",
      "Properties": {
        "GroupId": {
          "Ref": "sgData"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "DestinationSecurityGroupId": {
          "Ref": "sgData"
        }
      }
    }
  },
        "Outputs": {
        "AdminSecurityGroup": {
          "Value": {
            "Ref": "sgAdmin"
          },
          "Description": "Admin Security Group Id"
        },
        "TrendELBSecurityGroup": {
          "Value": {
            "Ref": "sgTrendELB"
          },
          "Description": "Trend ELB Security Group Id"
        },
        "TrendManagerSecurityGroup": {
          "Value": {
            "Ref": "sgTrendManager"
          },
          "Description": "Trend Manager Security Group Id"
        },
        "TrendAgentSecurityGroup": {
          "Value": {
            "Ref": "sgTrendAgent"
          },
          "Description": "Trend Agent Security Group Id"
        },
        "DataSecurityGroup": {
          "Value": {
            "Ref": "sgData"
          },
          "Description": "Database Security Group Id"
        },
        "VpcId": {
          "Value": {
            "Ref": "VpcId"
          },
          "Description": "ID of the VPC the SG are attached to"
        }
      }
    }
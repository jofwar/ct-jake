{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "AWS Cloudformation script to deploy Subnets, Route Tables, Security Groups and ACL's into a given VPC",
  "Parameters": {
    "VPCOctet": {
      "Description": "First two octets of the VPC",
      "Type": "String",
      "MinLength": "4",
      "MaxLength": "7",
      "AllowedPattern": "[0-9]{2,3}.[0-9]{1,3}",
      "ConstraintDescription": "must only be the first two octets without a trailing period"
    },
    "VpcId": {
      "Type": "String",
      "Description": "VpcId of your existing Virtual Private Cloud (VPC)"
    },
    "Name": {
      "Description": "Name TAG to allocate costs to",
      "Type": "String"
    },
    "AdminSg":{
      "Description" :"The Admin Security Group to connect the network to",
      "Type": "AWS::EC2::SecurityGroup::Id"
    },
    "DataSg":{
      "Description" :"The Database Security Group to connect the network to",
      "Type": "AWS::EC2::SecurityGroup::Id"
    },
    "Customer": {
      "Description" :"Customer TAG to allocate costs to",
      "Type": "String"
    },
    "School": {
      "Description" :"School TAG to allocate costs to",
      "Type": "String"
    },
    "Region": {
      "Default": "SYD",
      "Type": "String",
      "Description": "Region to deploy to.  First 3 letters of region in capitals, e.g. SYD, IRE"
    },
    "IGWID":{
      "Type":"String",
      "Description":"IGW ID for the VPC"
    },
    "VGWID":{
      "Type":"String",
      "Description":"VGW ID for the VPC"
    }
  },
  "Mappings": {
  "SubnetConfig": {
      "MUECustomServersA": {
        "CIDR": "20.96/28"
      },
      "MUECustomServersB": {
        "CIDR": "20.112/28"
      }
    },
    "AvailabilityZones": {
      "ap-southeast-2": {
        "ZoneA": "ap-southeast-2a",
        "ZoneB": "ap-southeast-2b"
      },
      "eu-west-1": {
        "ZoneA": "eu-west-1a",
        "ZoneB": "eu-west-1b"
      }
    }
  },
  "Resources": {
    "sgMUECustom": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "MUE Custom Security Group",
        "VpcId": {
          "Ref": "VpcId"
        },
        "Tags": [
          {
            "Key": "School",
            "Value": {
              "Ref": "School"
            }
          },
          {
            "Key": "Name",
            "Value": {
              "Ref": "Name"
            }
          },
          {
            "Key": "Customer",
            "Value": {
              "Ref": "Name"
            }
          }
        ]
      }
    },
    "sgMUECustomIngresssgHTTP": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "DependsOn": "sgMUECustom",
      "Properties": {
        "GroupId": {
          "Ref": "sgMUECustom"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "sgMUEEgresssgSQL": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "DependsOn": "sgMUECustom",
      "Properties": {
        "GroupId": {
          "Ref": "sgMUECustom"
        },
        "IpProtocol": "tcp",
        "FromPort": "2033",
        "ToPort": "2033",
        "DestinationSecurityGroupId": {
          "Ref" : "DataSg"
        }
      }
    },
    "sgMUEEgresssgHTTP": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "DependsOn": "sgMUECustom",
      "Properties": {
        "GroupId": {
          "Ref": "sgMUECustom"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "sgMUEEgresssgHTTPS": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "DependsOn": "sgMUECustom",
      "Properties": {
        "GroupId": {
          "Ref": "sgMUECustom"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "sgMUECustomIngresssgSSHAdmin": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "DependsOn": "sgMUECustom",
      "Properties": {
        "GroupId": {
          "Ref": "sgMUECustom"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "SourceSecurityGroupId": {
          "Ref" : "AdminSg"
        }
      }
    },
    "sgMUECustomIngresssgSSH": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "DependsOn": "sgMUECustom",
      "Properties": {
        "GroupId": {
          "Ref": "sgMUECustom"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "165.228.26.42/32"
      }
    },
    "sgMUECustomIngresssgSSH2": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "DependsOn": "sgMUECustom",
      "Properties": {
        "GroupId": {
          "Ref": "sgMUECustom"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "88.208.91.78/32"
      }
    },
    "SubnetMUECustomServersA": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": {
          "Fn::Join": [
            ".",
            [
              {
                "Ref": "VPCOctet"
              },
              {
                "Fn::FindInMap": [
                  "SubnetConfig",
                  "MUECustomServersA",
                  "CIDR"
                ]
              }
            ]
          ]
        },
        "AvailabilityZone": {
          "Fn::FindInMap": [
            "AvailabilityZones",
            {
              "Ref": "AWS::Region"
            },
            "ZoneA"
          ]
        },
        "VpcId": {
          "Ref": "VpcId"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "Name"
            }
          },
          {
            "Key": "School",
            "Value": {
              "Ref": "Name"
            }
          },
          {
            "Key": "Customer",
            "Value": {
              "Ref": "Name"
            }
          }
        ]
      }
    },
    "SubnetMUECustomServersB": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": {
          "Fn::Join": [
            ".",
            [
              {
                "Ref": "VPCOctet"
              },
              {
                "Fn::FindInMap": [
                  "SubnetConfig",
                  "MUECustomServersB",
                  "CIDR"
                ]
              }
            ]
          ]
        },
        "AvailabilityZone": {
          "Fn::FindInMap": [
            "AvailabilityZones",
            {
              "Ref": "AWS::Region"
            },
            "ZoneB"
          ]
        },
        "VpcId": {
          "Ref": "VpcId"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "Name"
            }
          },
          {
            "Key": "School",
            "Value": {
              "Ref": "Name"
            }
          },
          {
            "Key": "Customer",
            "Value": {
              "Ref": "Name"
            }
          }
        ]
      }
    },
    "MUECustomRouteTable":{
      "Type":"AWS::EC2::RouteTable",
      "Properties":{
        "VpcId":{
          "Ref":"VpcId"
        },
        "Tags": [
           {
            "Key": "Name",
            "Value": {
              "Ref": "Name"
            }
          },
          {
            "Key": "School",
            "Value": {
              "Ref": "Name"
            }
          },
          {
            "Key": "Customer",
            "Value": {
              "Ref": "Name"
            }
          }
        ]
      }
    },
    "WebRoutetoIGW":{
      "Type":"AWS::EC2::Route",
      "Properties":{
        "DestinationCidrBlock":"0.0.0.0/0",
        "RouteTableId":{
          "Ref":"MUECustomRouteTable"
        },
        "GatewayId":{
          "Ref":"IGWID"
        }
      }
    },
    "CustomRoutetoIGW1":{
      "Type":"AWS::EC2::Route",
      "Properties":{
        "DestinationCidrBlock":"165.228.26.42/32",
        "RouteTableId":{
          "Ref":"MUECustomRouteTable"
        },
        "GatewayId":{
          "Ref":"IGWID"
        }
      }
    },
    "CustomRoutetoIGW2":{
      "Type":"AWS::EC2::Route",
      "Properties":{
        "DestinationCidrBlock":"88.208.91.78/32",
        "RouteTableId":{
          "Ref":"MUECustomRouteTable"
        },
        "GatewayId":{
          "Ref":"IGWID"
        }
      }
    },
    "StaticRoutetoVGW":{
      "Type":"AWS::EC2::Route",
      "Properties":{
        "DestinationCidrBlock":"172.16.1.10/32",
        "RouteTableId":{
          "Ref":"MUECustomRouteTable"
        },
        "GatewayId":{
          "Ref":"VGWID"
        }
      }
    },
    "SubnetMUECustomServersARouteTable" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn" : "MUECustomRouteTable",
      "Properties" : {
        "SubnetId" : { "Ref" : "SubnetMUECustomServersA" },
        "RouteTableId" : { "Ref" : "MUECustomRouteTable" }
      }
    },
    "SubnetMUECustomServersBRouteTable" : {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn": "MUECustomRouteTable",
      "Properties": {
        "SubnetId": {
          "Ref": "SubnetMUECustomServersB"
        },
        "RouteTableId": {
          "Ref": "MUECustomRouteTable"
        }
      }
    },
    "MUECustomServersACL": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "VpcId"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "Name"
            }
          },
          {
            "Key": "School",
            "Value": {
              "Ref": "Name"
            }
          },
          {
            "Key": "Customer",
            "Value": {
              "Ref": "Name"
            }
          }
        ]
      }
    },
    "AllowMUECustomServersACLSSHAdmin": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "10.100.0.0/16",
        "Protocol": "6",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "PortRange": {
          "From": "22",
          "To": "22"
        },
        "NetworkAclId": {
          "Ref": "MUECustomServersACL"
        }
      }
    },
    "AllowMUECustomServersACLSSHCustom": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "165.228.26.42/32",
        "Protocol": "6",
        "RuleAction": "allow",
        "RuleNumber": "110",
        "PortRange": {
          "From": "22",
          "To": "22"
        },
        "NetworkAclId": {
          "Ref": "MUECustomServersACL"
        }
      }
    },
    "AllowMUECustomServersACLSSHCustom2": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "88.208.91.78/32",
        "Protocol": "6",
        "RuleAction": "allow",
        "RuleNumber": "120",
        "PortRange": {
          "From": "22",
          "To": "22"
        },
        "NetworkAclId": {
          "Ref": "MUECustomServersACL"
        }
      }
    },
    "AllowMUECustomServersACLYum": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Protocol": "6",
        "RuleAction": "allow",
        "RuleNumber": "130",
        "PortRange": {
          "From": "1024",
          "To": "65535"
        },
        "NetworkAclId": {
          "Ref": "MUECustomServersACL"
        }
      }
    },
    "AllowMUECustomServersACLLEgressWeb": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": true,
        "Protocol": "6",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "PortRange": {
          "From": "80",
          "To": "80"
        },
        "NetworkAclId": {
          "Ref": "MUECustomServersACL"
        }
      }
    },
    "AllowMUECustomServersACLEgressHTTPS": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": true,
        "Protocol": "6",
        "RuleAction": "allow",
        "RuleNumber": "110",
        "PortRange": {
          "From": "443",
          "To": "443"
        },
        "NetworkAclId": {
          "Ref": "MUECustomServersACL"
        }
      }
    },
    "AllowMUECustomServersACLEgressSSH": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": true,
        "Protocol": "6",
        "RuleAction": "allow",
        "RuleNumber": "120",
        "PortRange": {
          "From": "1024",
          "To": "65535"
        },
        "NetworkAclId": {
          "Ref": "MUECustomServersACL"
        }
      }
    },

    "AssocMUECustomServersAtoAdminACL": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "MUECustomServersACL"
        },
        "SubnetId": {
          "Ref": "SubnetMUECustomServersA"
        }
      }
    },
    "AssocMUECustomServersBtoAdminACL": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "MUECustomServersACL"
        },
        "SubnetId": {
          "Ref": "SubnetMUECustomServersB"
        }
      }
    }
  },
  "Outputs": {
    "MUECustomSecurityGroup": {
      "Value": {
        "Ref": "sgMUECustom"
      },
      "Description": "MUE Custom Server's Security Group"
    },
    "MUECustomServersRouteTable":{
      "Value": {
        "Ref": "MUECustomRouteTable"
      },
    "Description": "MUE Custom Server's Route Table"
    },
    "MUECustomServersACL":{
      "Value": {
        "Ref": "MUECustomServersACL"
    },
    "Description": "MUE Custom Server's ACL"
    },
    "MUECustomServersSubnetIDs": {
      "Value": {
        "Fn::Join": [
          ",",
          [
            {
              "Ref": "SubnetMUECustomServersA"
            },
            {
              "Ref": "SubnetMUECustomServersB"
            }
          ]
        ]
      },
      "Description": "Comma separated list of Web subnets"
    }
  }
}

AWSTemplateFormatVersion: '2010-09-09'
Description: AWS Cloudformation template to deploy a VPC, Subnets, NACL's, Security Groups and rules
Parameters:
  VPCOctet:
    Description: First two octets of the VPC
    Type: String
    MinLength: '4'
    MaxLength: '7'
    AllowedPattern: "[0-9]{2,3}.[0-9]{1,3}"
    Default: 10.0
    ConstraintDescription: must only be the first two octets without a trailing period
  Region:
    Default: SYD
    Type: String
    Description: Region to deploy to.  First 3 letters of region in capitals, e.g. SYD, IRE
# DHCP Option Set configurations
  DomainName:
    Type: String
    Description: Domain name
  DNSServers:
    Default: AmazonProvidedDNS
    Type: CommaDelimitedList
    Description: Comma separated list of DNS server IP addresses
# Tagging specific configurations
  Name:
    Description: The Name Tag to apply to all resources
    Type: String
    MinLength: '3'
    MaxLength: '255'
  Project:
    Description: The Project Tag to apply to all resources
    Type: String
    MinLength: '3'
    MaxLength: '255'
  Application:
    Description: The Application Tag to apply to all resources
    Type: String
    MinLength: '3'
    MaxLength: '255'
  Environment:
    Description: A Tag to differenciate the environment
    Type: String
    MinLength: '3'
    MaxLength: '255'
    Default: Production
    AllowedValues:
    - Production
    - Dev/Test
    - UAT
Mappings:
  SubnetConfig:
    VPC:
      CIDR: 0.0/16
    PublicA:
      CIDR: 0.0/24
    PublicB:
      CIDR: 1.0/24
    PublicC:
      CIDR: 2.0/24
    WebA:
      CIDR: 3.0/24
    WebB:
      CIDR: 4.0/24
    WebC:
      CIDR: 5.0/24
    AppA:
      CIDR: 6.0/24
    AppB:
      CIDR: 7.0/24
    AppC:
      CIDR: 8.0/24
    WorkspacesA:
      CIDR: 9.0/24
    WorkspacesB:
      CIDR: 10.0/24
    WorkspacesC:
      CIDR: 11.0/24
    DataA:
      CIDR: 12.0/24
    DataB:
      CIDR: 13.0/24
    DataC:
      CIDR: 14.0/24
    ManagementA:
      CIDR: 15.0/24
    ManagementB:
      CIDR: 16.0/24
    ManagementC:
      CIDR: 17.0/24
  AvailabilityZones:
    ap-southeast-2:
      ZoneA: ap-southeast-2a
      ZoneB: ap-southeast-2b
      ZoneC: ap-southeast-2c
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: VPC Configurations
      Parameters:
      - VPCOctet
      - Region
    - Label:
        default: Domain Configurations
      Parameters:
      - DomainName
      - DNSServers
    - Label:
        default: Tagging Configurations
      Parameters:
      - Name
      - Environment
      - Application
      - Project
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock:
        Fn::Join:
        - "."
        - - Ref: VPCOctet
          - Fn::FindInMap:
            - SubnetConfig
            - VPC
            - CIDR
      InstanceTenancy: default
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
      - Key: Name
        Value: !Ref Name
      - Key: Application
        Value: !Ref Application
      - Key: Project
        Value: !Ref Project
      - Key: Environment
        Value: !Ref Environment
# Subnet Configurations
# The beginning of the Public Subnets
  SubnetPublicA:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock:
        Fn::Join:
        - "."
        - - Ref: VPCOctet
          - Fn::FindInMap:
            - SubnetConfig
            - PublicA
            - CIDR
      AvailabilityZone:
        Fn::FindInMap:
        - AvailabilityZones
        - Ref: AWS::Region
        - ZoneA
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: Public A
      - Key: Application
        Value: !Ref Application
      - Key: Project
        Value: !Ref Project
      - Key: Environment
        Value: !Ref Environment
  SubnetPublicB:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock:
        Fn::Join:
        - "."
        - - Ref: VPCOctet
          - Fn::FindInMap:
            - SubnetConfig
            - PublicB
            - CIDR
      AvailabilityZone:
        Fn::FindInMap:
        - AvailabilityZones
        - Ref: AWS::Region
        - ZoneB
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: Public B
      - Key: Application
        Value: !Ref Application
      - Key: Project
        Value: !Ref Project
      - Key: Environment
        Value: !Ref Environment
  SubnetPublicC:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock:
        Fn::Join:
        - "."
        - - Ref: VPCOctet
          - Fn::FindInMap:
            - SubnetConfig
            - PublicC
            - CIDR
      AvailabilityZone:
        Fn::FindInMap:
        - AvailabilityZones
        - Ref: AWS::Region
        - ZoneC
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: Public C
      - Key: Application
        Value: !Ref Application
      - Key: Project
        Value: !Ref Project
      - Key: Environment
        Value: !Ref Environment
# The beginning of the Web Subnets
  SubnetWebA:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock:
        Fn::Join:
        - "."
        - - Ref: VPCOctet
          - Fn::FindInMap:
            - SubnetConfig
            - WebA
            - CIDR
      AvailabilityZone:
        Fn::FindInMap:
        - AvailabilityZones
        - Ref: AWS::Region
        - ZoneA
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: Web A
      - Key: Application
        Value: !Ref Application
      - Key: Project
        Value: !Ref Project
      - Key: Environment
        Value: !Ref Environment
  SubnetWebB:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock:
        Fn::Join:
        - "."
        - - Ref: VPCOctet
          - Fn::FindInMap:
            - SubnetConfig
            - WebB
            - CIDR
      AvailabilityZone:
        Fn::FindInMap:
        - AvailabilityZones
        - Ref: AWS::Region
        - ZoneB
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: Web B
      - Key: Application
        Value: !Ref Application
      - Key: Project
        Value: !Ref Project
      - Key: Environment
        Value: !Ref Environment
  SubnetWebC:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock:
        Fn::Join:
        - "."
        - - Ref: VPCOctet
          - Fn::FindInMap:
            - SubnetConfig
            - WebC
            - CIDR
      AvailabilityZone:
        Fn::FindInMap:
        - AvailabilityZones
        - Ref: AWS::Region
        - ZoneC
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: Web C
      - Key: Application
        Value: !Ref Application
      - Key: Project
        Value: !Ref Project
      - Key: Environment
        Value: !Ref Environment
# The beginning of the Application Subnets
  SubnetAppA:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock:
        Fn::Join:
        - "."
        - - Ref: VPCOctet
          - Fn::FindInMap:
            - SubnetConfig
            - AppA
            - CIDR
      AvailabilityZone:
        Fn::FindInMap:
        - AvailabilityZones
        - Ref: AWS::Region
        - ZoneA
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: App A
      - Key: Application
        Value: !Ref Application
      - Key: Project
        Value: !Ref Project
      - Key: Environment
        Value: !Ref Environment
  SubnetAppB:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock:
        Fn::Join:
        - "."
        - - Ref: VPCOctet
          - Fn::FindInMap:
            - SubnetConfig
            - AppB
            - CIDR
      AvailabilityZone:
        Fn::FindInMap:
        - AvailabilityZones
        - Ref: AWS::Region
        - ZoneB
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: App B
      - Key: Application
        Value: !Ref Application
      - Key: Project
        Value: !Ref Project
      - Key: Environment
        Value: !Ref Environment
  SubnetAppC:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock:
        Fn::Join:
        - "."
        - - Ref: VPCOctet
          - Fn::FindInMap:
            - SubnetConfig
            - AppC
            - CIDR
      AvailabilityZone:
        Fn::FindInMap:
        - AvailabilityZones
        - Ref: AWS::Region
        - ZoneC
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: App C
      - Key: Application
        Value: !Ref Application
      - Key: Project
        Value: !Ref Project
      - Key: Environment
        Value: !Ref Environment
# The beginning of the Workspaces Subnet
  SubnetWorkspacesA:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock:
        Fn::Join:
        - "."
        - - Ref: VPCOctet
          - Fn::FindInMap:
            - SubnetConfig
            - WorkspacesA
            - CIDR
      AvailabilityZone:
        Fn::FindInMap:
        - AvailabilityZones
        - Ref: AWS::Region
        - ZoneA
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: Workspaces A
      - Key: Application
        Value: !Ref Application
      - Key: Project
        Value: !Ref Project
      - Key: Environment
        Value: !Ref Environment
  SubnetWorkspacesB:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock:
        Fn::Join:
        - "."
        - - Ref: VPCOctet
          - Fn::FindInMap:
            - SubnetConfig
            - WorkspacesB
            - CIDR
      AvailabilityZone:
        Fn::FindInMap:
        - AvailabilityZones
        - Ref: AWS::Region
        - ZoneB
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: Workspaces B
      - Key: Application
        Value: !Ref Application
      - Key: Project
        Value: !Ref Project
      - Key: Environment
        Value: !Ref Environment
  SubnetWorkspacesC:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock:
        Fn::Join:
        - "."
        - - Ref: VPCOctet
          - Fn::FindInMap:
            - SubnetConfig
            - WorkspacesC
            - CIDR
      AvailabilityZone:
        Fn::FindInMap:
        - AvailabilityZones
        - Ref: AWS::Region
        - ZoneC
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: Workspaces C
      - Key: Application
        Value: !Ref Application
      - Key: Project
        Value: !Ref Project
      - Key: Environment
        Value: !Ref Environment
# The beginning of the Data Subnet
  SubnetDataA:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock:
        Fn::Join:
        - "."
        - - Ref: VPCOctet
          - Fn::FindInMap:
            - SubnetConfig
            - DataA
            - CIDR
      AvailabilityZone:
        Fn::FindInMap:
        - AvailabilityZones
        - Ref: AWS::Region
        - ZoneA
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: Data A
      - Key: Application
        Value: !Ref Application
      - Key: Project
        Value: !Ref Project
      - Key: Environment
        Value: !Ref Environment
  SubnetDataB:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock:
        Fn::Join:
        - "."
        - - Ref: VPCOctet
          - Fn::FindInMap:
            - SubnetConfig
            - DataB
            - CIDR
      AvailabilityZone:
        Fn::FindInMap:
        - AvailabilityZones
        - Ref: AWS::Region
        - ZoneB
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: Data B
      - Key: Application
        Value: !Ref Application
      - Key: Project
        Value: !Ref Project
      - Key: Environment
        Value: !Ref Environment
  SubnetDataC:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock:
        Fn::Join:
        - "."
        - - Ref: VPCOctet
          - Fn::FindInMap:
            - SubnetConfig
            - DataC
            - CIDR
      AvailabilityZone:
        Fn::FindInMap:
        - AvailabilityZones
        - Ref: AWS::Region
        - ZoneC
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: Data C
      - Key: Application
        Value: !Ref Application
      - Key: Project
        Value: !Ref Project
      - Key: Environment
        Value: !Ref Environment
# The beginning of the Management Subnets
  SubnetManagementA:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock:
        Fn::Join:
        - "."
        - - Ref: VPCOctet
          - Fn::FindInMap:
            - SubnetConfig
            - ManagementA
            - CIDR
      AvailabilityZone:
        Fn::FindInMap:
        - AvailabilityZones
        - Ref: AWS::Region
        - ZoneA
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: Management A
      - Key: Application
        Value: !Ref Application
      - Key: Project
        Value: !Ref Project
      - Key: Environment
        Value: !Ref Environment
  SubnetManagementB:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock:
        Fn::Join:
        - "."
        - - Ref: VPCOctet
          - Fn::FindInMap:
            - SubnetConfig
            - ManagementB
            - CIDR
      AvailabilityZone:
        Fn::FindInMap:
        - AvailabilityZones
        - Ref: AWS::Region
        - ZoneB
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: Management B
      - Key: Application
        Value: !Ref Application
      - Key: Project
        Value: !Ref Project
      - Key: Environment
        Value: !Ref Environment
  SubnetManagementC:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock:
        Fn::Join:
        - "."
        - - Ref: VPCOctet
          - Fn::FindInMap:
            - SubnetConfig
            - ManagementC
            - CIDR
      AvailabilityZone:
        Fn::FindInMap:
        - AvailabilityZones
        - Ref: AWS::Region
        - ZoneC
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: Management C
      - Key: Application
        Value: !Ref Application
      - Key: Project
        Value: !Ref Project
      - Key: Environment
        Value: !Ref Environment
# Route Table Configurations
  PublicRouteTableA:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: Public-A
      - Key: Application
        Value: !Ref Application
      - Key: Project
        Value: !Ref Project
      - Key: Environment
        Value: !Ref Environment
  WebRouteTableA:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: Web-A
      - Key: Application
        Value: !Ref Application
      - Key: Project
        Value: !Ref Project
      - Key: Environment
        Value: !Ref Environment
  AppRouteTableA:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: Application-A
      - Key: Application
        Value: !Ref Application
      - Key: Project
        Value: !Ref Project
      - Key: Environment
        Value: !Ref Environment
  WorkspacesRouteTableA:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: Workspaces-A
      - Key: Application
        Value: !Ref Application
      - Key: Project
        Value: !Ref Project
      - Key: Environment
        Value: !Ref Environment
  DataRouteTableA:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: Data-A
      - Key: Application
        Value: !Ref Application
      - Key: Project
        Value: !Ref Project
      - Key: Environment
        Value: !Ref Environment
  ManagementRouteTableA:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: Management-A
      - Key: Application
        Value: !Ref Application
      - Key: Project
        Value: !Ref Project
      - Key: Environment
        Value: !Ref Environment
  PublicRouteTableB:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: Public-B
      - Key: Application
        Value: !Ref Application
      - Key: Project
        Value: !Ref Project
      - Key: Environment
        Value: !Ref Environment
  WebRouteTableB:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: Web-B
      - Key: Application
        Value: !Ref Application
      - Key: Project
        Value: !Ref Project
      - Key: Environment
        Value: !Ref Environment
  AppRouteTableB:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: Application-B
      - Key: Application
        Value: !Ref Application
      - Key: Project
        Value: !Ref Project
      - Key: Environment
        Value: !Ref Environment
  WorkspacesRouteTableB:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: Workspaces-B
      - Key: Application
        Value: !Ref Application
      - Key: Project
        Value: !Ref Project
      - Key: Environment
        Value: !Ref Environment
  DataRouteTableB:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: Data-B
      - Key: Application
        Value: !Ref Application
      - Key: Project
        Value: !Ref Project
      - Key: Environment
        Value: !Ref Environment
  ManagementRouteTableB:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: Management-B
      - Key: Application
        Value: !Ref Application
      - Key: Project
        Value: !Ref Project
      - Key: Environment
        Value: !Ref Environment
  PublicRouteTableC:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: Public-C
      - Key: Application
        Value: !Ref Application
      - Key: Project
        Value: !Ref Project
      - Key: Environment
        Value: !Ref Environment
  WebRouteTableC:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: Web-C
      - Key: Application
        Value: !Ref Application
      - Key: Project
        Value: !Ref Project
      - Key: Environment
        Value: !Ref Environment
  AppRouteTableC:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: Application-C
      - Key: Application
        Value: !Ref Application
      - Key: Project
        Value: !Ref Project
      - Key: Environment
        Value: !Ref Environment
  WorkspacesRouteTableC:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: Workspaces-C
      - Key: Application
        Value: !Ref Application
      - Key: Project
        Value: !Ref Project
      - Key: Environment
        Value: !Ref Environment
  DataRouteTableC:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: Data-C
      - Key: Application
        Value: !Ref Application
      - Key: Project
        Value: !Ref Project
      - Key: Environment
        Value: !Ref Environment
  ManagementRouteTableC:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: Management-C
      - Key: Application
        Value: !Ref Application
      - Key: Project
        Value: !Ref Project
      - Key: Environment
        Value: !Ref Environment
# The beginning of the IGW resource
  VPCIGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: IGW
      - Key: Application
        Value: !Ref Application
      - Key: Project
        Value: !Ref Project
      - Key: Environment
        Value: !Ref Environment
  AttachIGWtoVPC:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPC
      InternetGatewayId:
        Ref: VPCIGW
# VPC Flow Logs
  FlowLogs:
    Type: AWS::EC2::FlowLog
    Properties:
      DeliverLogsPermissionArn: !Sub 'arn:aws:iam::${AWS::AccountId}:role/flowlogsRole'
      LogGroupName: FlowLogsGroup
      ResourceId:
        Ref: VPC
      ResourceType: VPC
      TrafficType: ALL
# The DHCP Option-sets resource
  VPCDHCP:
    Type: AWS::EC2::DHCPOptions
    Properties:
      DomainName: !Ref DomainName
      DomainNameServers: !Ref DNSServers
      Tags:
      - Key: Name
        Value: DHCP Option Set
      - Key: Application
        Value: !Ref Application
      - Key: Project
        Value: !Ref Project
      - Key: Environment
        Value: !Ref Environment
  AssocVPCDHCPtoVPC:
    Type: AWS::EC2::VPCDHCPOptionsAssociation
    Properties:
      VpcId:
        Ref: VPC
      DhcpOptionsId:
        Ref: VPCDHCP
# Public Subnets to Public Route Table
  AssocSubnetPublicAtoPublicRouteTable:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTableA
      SubnetId: !Ref SubnetPublicA
  AssocSubnetPublicBtoPublicRouteTable:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: PublicRouteTableB
      SubnetId:
        Ref: SubnetPublicB
  AssocSubnetPublicCtoPublicRouteTable:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: PublicRouteTableC
      SubnetId:
        Ref: SubnetPublicC
# Web Subnets to Public Route Table
  AssocSubnetWebAtoWebRouteTable:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: WebRouteTableA
      SubnetId:
        Ref: SubnetWebA
  AssocSubnetWebBtoWebRouteTable:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: WebRouteTableB
      SubnetId:
        Ref: SubnetWebB
  AssocSubnetWebCtoWebRouteTable:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: WebRouteTableC
      SubnetId:
        Ref: SubnetWebC
# App Subnets to App Route Table
  AssocSubnetAppAtoAppRouteTable:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: AppRouteTableA
      SubnetId:
        Ref: SubnetAppA
  AssocSubnetAppBtoAppRouteTable:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: AppRouteTableB
      SubnetId:
        Ref: SubnetAppB
  AssocSubnetAppCtoAppRouteTable:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: AppRouteTableC
      SubnetId:
        Ref: SubnetAppC
# Workspaces Subnets to Workspaces Route Table
  AssocSubnetWorkspacesAtoWorkspacesRouteTable:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: WorkspacesRouteTableA
      SubnetId:
        Ref: SubnetWorkspacesA
  AssocSubnetWorkspacesBtoWorkspacesRouteTable:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: WorkspacesRouteTableB
      SubnetId:
        Ref: SubnetWorkspacesB
  AssocSubnetWorkspacesCtoWorkspacesRouteTable:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: WorkspacesRouteTableC
      SubnetId:
        Ref: SubnetWorkspacesC
# Data Subnets to Data Rout Table
  AssocSubnetDataAtoDataRouteTable:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: DataRouteTableA
      SubnetId:
        Ref: SubnetDataA
  AssocSubnetDataBtoDataRouteTable:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: DataRouteTableB
      SubnetId:
        Ref: SubnetDataB
  AssocSubnetDataCtoDataRouteTable:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: DataRouteTableC
      SubnetId:
        Ref: SubnetDataC
# Management Subnets to Management Route Table
  AssocSubneManagementAtoManagementRouteTable:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: ManagementRouteTableA
      SubnetId:
        Ref: SubnetManagementA
  AssocSubnetManagementBtoManagementRouteTable:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: ManagementRouteTableB
      SubnetId:
        Ref: SubnetManagementB
  AssocSubnetManagementCtoManagementRouteTable:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: ManagementRouteTableC
      SubnetId:
        Ref: SubnetManagementC
  S3VPCEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      RouteTableIds:
        - !Ref PublicRouteTableA
        - !Ref WebRouteTableA
        - !Ref AppRouteTableA
        - !Ref WorkspacesRouteTableA
        - !Ref DataRouteTableA
        - !Ref ManagementRouteTableA
        - !Ref PublicRouteTableB
        - !Ref WebRouteTableB
        - !Ref AppRouteTableB
        - !Ref WorkspacesRouteTableB
        - !Ref DataRouteTableB
        - !Ref ManagementRouteTableB
        - !Ref PublicRouteTableC
        - !Ref WebRouteTableC
        - !Ref AppRouteTableC
        - !Ref WorkspacesRouteTableC
        - !Ref DataRouteTableC
        - !Ref ManagementRouteTableC
      ServiceName: com.amazonaws.ap-southeast-2.s3
      VpcId: !Ref VPC
  DynamoDBVPCEndpoint:
      Type: AWS::EC2::VPCEndpoint
      Properties:
        RouteTableIds:
        - !Ref PublicRouteTableA
        - !Ref WebRouteTableA
        - !Ref AppRouteTableA
        - !Ref WorkspacesRouteTableA
        - !Ref DataRouteTableA
        - !Ref ManagementRouteTableA
        - !Ref PublicRouteTableB
        - !Ref WebRouteTableB
        - !Ref AppRouteTableB
        - !Ref WorkspacesRouteTableB
        - !Ref DataRouteTableB
        - !Ref ManagementRouteTableB
        - !Ref PublicRouteTableC
        - !Ref WebRouteTableC
        - !Ref AppRouteTableC
        - !Ref WorkspacesRouteTableC
        - !Ref DataRouteTableC
        - !Ref ManagementRouteTableC
        ServiceName: com.amazonaws.ap-southeast-2.dynamodb
        VpcId: !Ref VPC
#Security Group Configurations
  sgPublic:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Public Security Group"
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: Public
      - Key: Application
        Value: !Ref Application
      - Key: Project
        Value: !Ref Project
      - Key: Environment
        Value: !Ref Environment
  sgWeb:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Web Server Security Group"
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value:  Web
      - Key: Application
        Value: !Ref Application
      - Key: Project
        Value: !Ref Project
      - Key: Environment
        Value: !Ref Environment
  sgApp:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Application Security Group"
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: Application
      - Key: Application
        Value: !Ref Application
      - Key: Project
        Value: !Ref Project
      - Key: Environment
        Value: !Ref Environment
  sgWorkspaces:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Workspaces Server Security Group"
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: Workspaces
      - Key: Application
        Value: !Ref Application
      - Key: Project
        Value: !Ref Project
      - Key: Environment
        Value: !Ref Environment
  sgData:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Database Server Security Group"
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: Data
      - Key: Application
        Value: !Ref Application
      - Key: Project
        Value: !Ref Project
      - Key: Environment
        Value: !Ref Environment
  sgManagement:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Management Security Group"
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: Management
      - Key: Application
        Value: !Ref Application
      - Key: Project
        Value: !Ref Project
      - Key: Environment
        Value: !Ref Environment
  sgNAT:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "NAT Security Group"
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: NAT
      - Key: Application
        Value: !Ref Application
      - Key: Project
        Value: !Ref Project
      - Key: Environment
        Value: !Ref Environment
  sgActiveDirectory:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Active Directory Security Group"
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: Active Directory
      - Key: Application
        Value: !Ref Application
      - Key: Project
        Value: !Ref Project
      - Key: Environment
        Value: !Ref Environment
#  WorkspacesIngressRDPfromAll:
#    Type: AWS::EC2::SecurityGroupIngress
#    Properties:
#      IpProtocol: tcp
#      FromPort: 3389
#      ToPort: 3389
#      CidrIp:
#        Fn::Join:
#        - "."
#        - - Ref: VPCOctet
#          - Fn::FindInMap:
#            - SubnetConfig
#            - VPC
#            - CIDR
#      GroupId: !Ref sgWorkspaces
#  WorkspacesEgressAll:
#    Type: AWS::EC2::SecurityGroupEgress
#    Properties:
#      IpProtocol: -1
#      FromPort: '0'
#      ToPort: '65535'
#      CidrIp: 0.0.0.0/0
#      GroupId: !Ref sgWorkspaces
  ActiveDirectoryIngress445U:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: udp
      FromPort: '445'
      ToPort: '445'
      CidrIp: 0.0.0.0/0
      GroupId: !Ref sgActiveDirectory
  ActiveDirectoryIngress138U:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: udp
      FromPort: '138'
      ToPort: '138'
      CidrIp: 0.0.0.0/0
      GroupId: !Ref sgActiveDirectory
  ActiveDirectoryIngress464U:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: udp
      FromPort: '464'
      ToPort: '464'
      CidrIp: 0.0.0.0/0
      GroupId: !Ref sgActiveDirectory
  ActiveDirectoryIngress464T:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      FromPort: '464'
      ToPort: '464'
      CidrIp: 0.0.0.0/0
      GroupId: !Ref sgActiveDirectory
  ActiveDirectoryIngress389:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: udp
      FromPort: '389'
      ToPort: '389'
      CidrIp: 0.0.0.0/0
      GroupId: !Ref sgActiveDirectory
  ActiveDirectoryIngressDNSU:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: udp
      FromPort: '53'
      ToPort: '53'
      CidrIp: 0.0.0.0/0
      GroupId: !Ref sgActiveDirectory
  ActiveDirectoryLDAP:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      FromPort: '389'
      ToPort: '389'
      CidrIp: 0.0.0.0/0
      GroupId: !Ref sgActiveDirectory
  ActiveDirectoryIngress123U:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: udp
      FromPort: '123'
      ToPort: '123'
      CidrIp: 0.0.0.0/0
      GroupId: !Ref sgActiveDirectory
  ActiveDirectoryIngress445:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      FromPort: '445'
      ToPort: '445'
      CidrIp: 0.0.0.0/0
      GroupId: !Ref sgActiveDirectory
  ActiveDirectoryEgressICMP:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: icmp
      FromPort: '-1'
      ToPort: '-1'
      CidrIp: 0.0.0.0/0
      GroupId: !Ref sgActiveDirectory
  ActiveDirectoryIngress32683269:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      FromPort: '3268'
      ToPort: '3269'
      CidrIp: 0.0.0.0/0
      GroupId: !Ref sgActiveDirectory
  ActiveDirectoryIngressEphemeral:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      FromPort: '1024'
      ToPort: '65535'
      CidrIp: 0.0.0.0/0
      GroupId: !Ref sgActiveDirectory
  ActiveDirectoryIngress88:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      FromPort: '88'
      ToPort: '88'
      CidrIp: 0.0.0.0/0
      GroupId: !Ref sgActiveDirectory
  ActiveDirectoryIngressSelf:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: -1
      FromPort: '-1'
      ToPort: '-1'
      SourceSecurityGroupId: !Ref sgActiveDirectory
      GroupId: !Ref sgActiveDirectory
  ActiveDirectoryIngress135:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      FromPort: '135'
      ToPort: '135'
      CidrIp: 0.0.0.0/0
      GroupId: !Ref sgActiveDirectory
  ActiveDirectoryIngress636:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      FromPort: '636'
      ToPort: '636'
      CidrIp: 0.0.0.0/0
      GroupId: !Ref sgActiveDirectory
  ActiveDirectoryIngressDNS:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      FromPort: '53'
      ToPort: '53'
      CidrIp: 0.0.0.0/0
      GroupId: !Ref sgActiveDirectory
  ActiveDirectoryIngress88U:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: udp
      FromPort: '88'
      ToPort: '88'
      CidrIp: 0.0.0.0/0
      GroupId: !Ref sgActiveDirectory
# The Network ACLS
  PublicACL:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Public
        - Key: Application
          Value: !Ref Application
        - Key: Project
          Value: !Ref Project
        - Key: Environment
          Value: Environment
  WebACL:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Web
        - Key: Application
          Value: !Ref Application
        - Key: Project
          Value: !Ref Project
        - Key: Environment
          Value: !Ref Environment
  AppACL:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: App
        - Key: Application
          Value: !Ref Application
        - Key: Project
          Value: !Ref Project
        - Key: Environment
          Value: !Ref Environment
  DataACL:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Data
        - Key: Application
          Value: !Ref Application
        - Key: Project
          Value: !Ref Project
        - Key: Environment
          Value: !Ref Environment
  WorkspacesACL:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Workspaces
        - Key: Application
          Value: !Ref Application
        - Key: Project
          Value: !Ref Project
        - Key: Environment
          Value: !Ref Environment
  ManagementACL:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Management
        - Key: Application
          Value: !Ref Application
        - Key: Project
          Value: !Ref Project
        - Key: Environment
          Value: !Ref Environment
# The NACL Rules
  PublicACLRuleOut:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      Egress: 'true'
      CidrBlock: 0.0.0.0/0
      Protocol: -1
      RuleAction: allow
      RuleNumber: '100'
      PortRange:
        From: '0'
        To: '65535'
      NetworkAclId: !Ref PublicACL
  PublicACLRuleIn:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Protocol: -1
      RuleAction: allow
      RuleNumber: '100'
      PortRange:
        From: '0'
        To: '65535'
      NetworkAclId: !Ref PublicACL
  WebACLRuleOut:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      Egress: 'true'
      CidrBlock: 0.0.0.0/0
      Protocol: -1
      RuleAction: allow
      RuleNumber: '100'
      PortRange:
        From: '0'
        To: '65535'
      NetworkAclId: !Ref WebACL
  WebACLRuleIn:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Protocol: -1
      RuleAction: allow
      RuleNumber: '100'
      PortRange:
        From: '0'
        To: '65535'
      NetworkAclId: !Ref WebACL
  APPACLRuleOut:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      Egress: 'true'
      CidrBlock: 0.0.0.0/0
      Protocol: -1
      RuleAction: allow
      RuleNumber: '100'
      PortRange:
        From: '0'
        To: '65535'
      NetworkAclId: !Ref AppACL
  APPACLRuleIn:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Protocol: -1
      RuleAction: allow
      RuleNumber: '100'
      PortRange:
        From: '0'
        To: '65535'
      NetworkAclId: !Ref AppACL
  DataACLRuleOut:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      Egress: 'true'
      CidrBlock: 0.0.0.0/0
      Protocol: -1
      RuleAction: allow
      RuleNumber: '100'
      PortRange:
        From: '0'
        To: '65535'
      NetworkAclId: !Ref DataACL
  DataACLRuleIn:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Protocol: -1
      RuleAction: allow
      RuleNumber: '100'
      PortRange:
        From: '0'
        To: '65535'
      NetworkAclId: !Ref DataACL
  WorkspacesACLRuleOut:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      Egress: 'true'
      CidrBlock: 0.0.0.0/0
      Protocol: -1
      RuleAction: allow
      RuleNumber: '100'
      PortRange:
        From: '0'
        To: '65535'
      NetworkAclId: !Ref WorkspacesACL
  WorkspacesACLRuleIn:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Protocol: -1
      RuleAction: allow
      RuleNumber: '100'
      PortRange:
        From: '0'
        To: '65535'
      NetworkAclId: !Ref WorkspacesACL
  ManagementACLRuleIn:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      Egress: 'true'
      CidrBlock: 0.0.0.0/0
      Protocol: -1
      RuleAction: allow
      RuleNumber: '100'
      PortRange:
        From: '0'
        To: '65535'
      NetworkAclId: !Ref ManagementACL
  ManagementACLRuleOut:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Protocol: -1
      RuleAction: allow
      RuleNumber: '100'
      PortRange:
        From: '0'
        To: '65535'
      NetworkAclId: !Ref ManagementACL
# The Association between Subnets and NACLs
# PublicACL
  AssocSubnetPublicAtoPublicACL:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref PublicACL
      SubnetId: !Ref SubnetPublicA
  AssocSubnetPublicBtoPublicACL:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref PublicACL
      SubnetId: !Ref SubnetPublicB
  AssocSubnetPublicCtoPublicACL:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref PublicACL
      SubnetId: !Ref SubnetPublicC
# WebACL
  AssocSubnetWebAtoWebACL:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref WebACL
      SubnetId: !Ref SubnetWebA
  AssocSubnetWebBtoWebACL:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref WebACL
      SubnetId: !Ref SubnetWebB
  AssocSubnetWebCtoWebACL:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref WebACL
      SubnetId: !Ref SubnetWebC
# AppACL
  AssocSubnetAppAtoAppACL:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref AppACL
      SubnetId: !Ref SubnetAppA
  AssocSubnetAppBtoAppACL:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref AppACL
      SubnetId: !Ref SubnetAppB
  AssocSubnetAppCtoAppACL:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref AppACL
      SubnetId: !Ref SubnetAppC
# WorkspacesACL
  AssocSubnetWorkspacesAtoWorkspacesACL:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref WorkspacesACL
      SubnetId: !Ref SubnetWorkspacesA
  AssocSubnetWorkspacesBtoWorkspacesACL:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref WorkspacesACL
      SubnetId: !Ref SubnetWorkspacesB
  AssocSubnetWorkspacesCtoWorkspacesACL:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref WorkspacesACL
      SubnetId: !Ref SubnetWorkspacesC
# DataACL
  AssocSubnetDataAtoDataACL:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref DataACL
      SubnetId: !Ref SubnetDataA
  AssocSubnetDataBtoDataACL:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref DataACL
      SubnetId: !Ref SubnetDataB
  AssocSubnetDataCtoDataACL:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref DataACL
      SubnetId: !Ref SubnetDataC
# ManagementACL
  AssocSubnetManagementAtoManagementACL:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref ManagementACL
      SubnetId: !Ref SubnetManagementA
  AssocSubnetManagementBtoManagementACL:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref ManagementACL
      SubnetId: !Ref SubnetManagementB
  AssocSubnetManagementCtoManagementACL:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref ManagementACL
      SubnetId: !Ref SubnetManagementC
# Public Route
  PublicRouteA:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTableA
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref VPCIGW
  PublicRouteB:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTableB
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref VPCIGW
  PublicRouteC:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTableC
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref VPCIGW
Outputs:
  VPCID:
    Value:
      Ref: VPC
    Description: ID of the VPC deployed
  VPCCIDR:
    Value:
      Fn::Join:
      - "."
      - - Ref: VPCOctet
        - Fn::FindInMap:
          - SubnetConfig
          - VPC
          - CIDR
    Description: CIDR of the VPC deployed
    Export:
      Name: !Sub "${AWS::StackName}-VPCId"
  IGWID:
    Value:
      Ref: VPCIGW
    Description: IGW ID for the VPC
  PublicSubnetIDs:
    Value:
      Fn::Join:
      - ","
      - - Ref: SubnetPublicA
        - Ref: SubnetPublicB
        - Ref: SubnetPublicC
    Description: Comma separated list of Public subnets
  WebSubnetIDs:
    Value:
      Fn::Join:
      - ","
      - - Ref: SubnetWebA
        - Ref: SubnetWebB
        - Ref: SubnetWebC
    Description: Comma separated list of Web subnets
  AppSubnetIDs:
    Value:
      Fn::Join:
      - ","
      - - Ref: SubnetAppA
        - Ref: SubnetAppB
        - Ref: SubnetAppC
    Description: Comma separated list of Application subnets
  DataSubnetIDs:
    Value:
      Fn::Join:
      - ","
      - - Ref: SubnetDataA
        - Ref: SubnetDataB
        - Ref: SubnetDataC
    Description: Comma separated list of Data subnets
  ManagementSubnetIDs:
    Value:
      Fn::Join:
      - ","
      - - Ref: SubnetManagementA
        - Ref: SubnetManagementB
        - Ref: SubnetManagementC
    Description: Comma separated list of Management subnets
# Route Table Outputs
  PublicART:
    Value: !Ref PublicRouteTableA
    Description: The Public Route Table
    Export:
      Name: !Sub "${AWS::StackName}-Public-A-RT"
  WebART:
    Value: !Ref WebRouteTableA
    Description: The Web Route Table
    Export:
      Name: !Sub "${AWS::StackName}-Web-A-RT"
  ApplicationART:
    Value: !Ref AppRouteTableA
    Description: The Application Route Table
    Export:
      Name: !Sub "${AWS::StackName}-Application-A-RT"
  WorkspacesART:
    Value: !Ref WorkspacesRouteTableA
    Description: The Workspaces Route Table
    Export:
      Name: !Sub "${AWS::StackName}-Workspaces-A-RT"
  DataART:
    Value: !Ref DataRouteTableA
    Description: The Data Route Table
    Export:
      Name: !Sub "${AWS::StackName}-Data-A-RT"
  ManagemenART:
    Value: !Ref ManagementRouteTableA
    Description: The Management Route Table
    Export:
      Name: !Sub "${AWS::StackName}-Management-A-RT"
  PublicBRT:
    Value: !Ref PublicRouteTableB
    Description: The Public Route Table
    Export:
      Name: !Sub "${AWS::StackName}-Public-B-RT"
  WebBRT:
    Value: !Ref WebRouteTableB
    Description: The Web Route Table
    Export:
      Name: !Sub "${AWS::StackName}-Web-B-RT"
  ApplicationBRT:
    Value: !Ref AppRouteTableB
    Description: The Application Route Table
    Export:
      Name: !Sub "${AWS::StackName}-Application-B-RT"
  WorkspacesBRT:
    Value: !Ref WorkspacesRouteTableB
    Description: The Workspaces Route Table
    Export:
      Name: !Sub "${AWS::StackName}-Workspaces-B-RT"
  DataBRT:
    Value: !Ref DataRouteTableB
    Description: The Data Route Table
    Export:
      Name: !Sub "${AWS::StackName}-Data-B-RT"
  ManagemenBRT:
    Value: !Ref ManagementRouteTableB
    Description: The Management Route Table
    Export:
      Name: !Sub "${AWS::StackName}-Management-B-RT"
  PublicCRT:
    Value: !Ref PublicRouteTableC
    Description: The Public Route Table
    Export:
      Name: !Sub "${AWS::StackName}-Public-C-RT"
  WebCRT:
    Value: !Ref WebRouteTableC
    Description: The Web Route Table
    Export:
      Name: !Sub "${AWS::StackName}-Web-C-RT"
  ApplicationCRT:
    Value: !Ref AppRouteTableC
    Description: The Application Route Table
    Export:
      Name: !Sub "${AWS::StackName}-Application-C-RT"
  WorkspacesCRT:
    Value: !Ref WorkspacesRouteTableC
    Description: The Workspaces Route Table
    Export:
      Name: !Sub "${AWS::StackName}-Workspaces-C-RT"
  DataCRT:
    Value: !Ref DataRouteTableC
    Description: The Data Route Table
    Export:
      Name: !Sub "${AWS::StackName}-Data-C-RT"
  ManagemenCRT:
    Value: !Ref ManagementRouteTableC
    Description: The Management Route Table
    Export:
      Name: !Sub "${AWS::StackName}-Management-C-RT"
# Security Group Outputs
  PublicSG:
    Value: !Ref sgPublic
    Description: Public Security Group
    Export:
      Name: !Sub "${AWS::StackName}-PublicSG"
  WebSG:
    Value: !Ref sgWeb
    Description: Web Security Group
    Export:
      Name: !Sub "${AWS::StackName}-WebSG"
  AppSG:
    Value: !Ref sgApp
    Description: Application Security Group
    Export:
      Name: !Sub "${AWS::StackName}-AppSG"
  WorkspacesSG:
    Value: !Ref sgWorkspaces
    Description: Workspaces Security Group
    Export:
      Name: !Sub "${AWS::StackName}-WorkspacesSG"
  NATSG:
    Value: !Ref sgNAT
    Description: NAT Security Group
    Export:
      Name: !Sub "${AWS::StackName}-NATSG"
  DataSG:
    Value: !Ref sgData
    Description: Relational Database Management Service Security Group
    Export:
      Name: !Sub "${AWS::StackName}-DataSG"
  ManagementSG:
    Value: !Ref sgManagement
    Description: Management Service Security Group
    Export:
      Name: !Sub "${AWS::StackName}-ManagementSG"
# NACL Outputs
  PublicACL:
    Value: !Ref PublicACL
    Description: Public ACL ID
    Export:
      Name: !Sub "${AWS::StackName}-PublicACL"
  WebACL:
    Value: !Ref WebACL
    Description: Web ACL ID
    Export:
      Name: !Sub "${AWS::StackName}-WebACL"
  AppACL:
    Value: !Ref AppACL
    Description: App ACL ID
    Export:
      Name: !Sub "${AWS::StackName}-AppACL"
  WorkspacesACL:
    Value: !Ref WorkspacesACL
    Description: Workspaces ACL ID
    Export:
      Name: !Sub "${AWS::StackName}-WorkspaceACL"
  DataACL:
    Value: !Ref DataACL
    Description: Data ACL ID
    Export:
      Name: !Sub "${AWS::StackName}-DataACL"
  ManagementACL:
    Value: !Ref ManagementACL
    Description: Management ACL ID
    Export:
      Name: !Sub "${AWS::StackName}-ManagementACL"